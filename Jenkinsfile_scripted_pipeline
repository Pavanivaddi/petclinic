node {
    def mavenHome = tool name: "maven3.8.3"
    stage('Pull code from github') { // for display purposes
        git 'https://github.com/parthlimbachia/petclinic.git'
    }
    stage('Build the application package') {
        // Run the maven build
        sh "${mavenHome}/bin/mvn clean package"
    }
    
    stage('Build docker image containing the application package') {
        sh "docker build -t 192.168.239.131:9000/petclinic:${BUILD_NUMBER} ."
    } 
    
    stage('Login to Nexus and Push docker image to Nexus server'){
        withCredentials([usernamePassword(credentialsId: 'Nexus', passwordVariable: 'nexus_pwd', usernameVariable: 'admin')]) {
        sh "docker login -u admin -p ${nexus_pwd} 192.168.239.131:9000"
        sh "docker push 192.168.239.131:9000/petclinic:${BUILD_NUMBER}"
        }
    }
    
    stage('Remove the image locally after pushing to Nexus server') {
        sh "docker rmi 192.168.239.131:9000/petclinic:${BUILD_NUMBER}"
    }
    
    stage('Create container and run in the deployment server'){
        sshagent(['Deployment_server_tomcat']) {
            withCredentials([usernamePassword(credentialsId: 'Nexus', passwordVariable: 'nexus_pwd', usernameVariable: 'admin')]) {
        sh "ssh -o StrictHostKeyChecking=no root@192.168.239.129 docker login -u admin -p ${nexus_pwd} 192.168.239.131:9000"
        }
        sh "ssh -o StrictHostKeyChecking=no root@192.168.239.129 docker rm -f petclinic_jenkins || true"
        sh "ssh -o StrictHostKeyChecking=no root@192.168.239.129 docker run -d -p 8000:8080 --name petclinic_jenkins 192.168.239.131:9000/petclinic:${BUILD_NUMBER}"
      } 
    }      
}
